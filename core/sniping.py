import json
from utils import settings
from utils.logger import logger as log


async def fetch_new_gifts(bot_client, tg_client):
    available_gifts = await tg_client.get_available_gifts()

    try:
        with open('gifts.json', encoding='utf-8') as f:
            recorded_gifts = json.load(f)
    except (FileNotFoundError, json.JSONDecodeError):
        recorded_gifts = []

    recorded_ids = {gift["id"] for gift in recorded_gifts}
    gifts_to_purchase = []

    for gift in available_gifts:
        if gift.id in recorded_ids:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–∂–µ –∑–∞–º–µ—á–µ–Ω–Ω—ã–µ

        if gift.available_amount <= 0:
            continue  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–¥–∞—Ä–∫–∏

        current_gift = {'id': gift.id, 'price': gift.price}
        recorded_gifts.append(current_gift)

        with open('gifts.json', 'w', encoding='utf-8') as f:
            json.dump(recorded_gifts, f, ensure_ascii=False, indent=2)

        if settings.SEND_NOTIFICATIONS:
            status = f'–û–≥—Ä–∞–Ω–∏—á–µ–Ω–æ ({gift.available_amount})' if gift.is_limited else '–ë–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π'

            try:
                sticker = await bot_client.download_media(gift.sticker.file_id, in_memory=True)
                sticker.name = 'sticker.tgs'
                await bot_client.send_sticker(chat_id=settings.NOTIFICATION_ID, sticker=sticker)
            except Exception as err:
                log.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å—Ç–∏–∫–µ—Ä –≤ {settings.NOTIFICATION_ID}: {err}")

            try:
                message = (
                    f'<b>üß® –ù–û–í–´–ô –ü–û–î–ê–†–û–ö üß®\n'
                    f'‚ùóÔ∏è {status}\n\n'
                    f'‚≠ê –¶–µ–Ω–∞: {gift.price} STAR\n'
                    f'üéÅ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ: {gift.total_amount}</b>'
                )
                await bot_client.send_message(chat_id=settings.NOTIFICATION_ID, text=message)
            except Exception as err:
                log.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–¥–∞—Ä–∫–µ –≤ {settings.NOTIFICATION_ID}: {err}")

        if not gift.is_limited:
            continue

        for profile_name in settings.ACTIVE_PROFILES:
            profile = settings.PROFILES[profile_name]
            if not (profile["SUPPLY_LIMIT"]["FROM"] <= gift.total_amount <= profile["SUPPLY_LIMIT"]["TO"]):
                continue
            if not (profile["PRICE_LIMIT"]["FROM"] <= gift.price <= profile["PRICE_LIMIT"]["TO"]):
                continue

            gifts_to_purchase.append({
                'gift_id': gift.id,
                'available_amount': gift.available_amount,
                'price': gift.price,
                'profile': profile_name
            })
            break  # —Ç–æ–ª—å–∫–æ –ø–æ–¥ –æ–¥–∏–Ω –ø—Ä–æ—Ñ–∏–ª—å

    return gifts_to_purchase
